# Domain types
type AccountManager {
  id: Int!
  slug: String!
  name: String!
  email: String
  kind: WorkerKind!
  errors: [String]
  position: String!
  ontologyUserId: Int
  insightsUserId: Int
  todoistUserId: Int
  pipedriveUserId: Int
  isRecognized: Boolean!
  omniUrl: String!
  photoUrl: String

  isOntologyAuthor: Boolean!
  isInsightsAuthor: Boolean!
  isTimeTrackerWorker: Boolean!
  isSpecialProjectsWorker: Boolean!

  timesheet(slug: String!, filters: [FilterInput]): TimesheetSummary
  cases(onlyActives: Boolean): [Case!]!
  activeDeals: [ActiveDeal!]!
  forecast(dateOfInterest: Date, filters: [FilterInput]): Forecast!
}

type Worker {
  id: Int!
  slug: String!
  ontologyUrl: String
  name: String!
  email: String
  kind: WorkerKind!
  errors: [String]
  position: String!
  ontologyUserId: Int
  insightsUserId: Int
  todoistUserId: Int
  pipedriveUserId: Int
  isRecognized: Boolean!
  omniUrl: String!
  photoUrl: String

  isOntologyAuthor: Boolean!
  isInsightsAuthor: Boolean!
  isTimeTrackerWorker: Boolean!
  isSpecialProjectsWorker: Boolean!

  timesheet(slug: String!, filters: [FilterInput]): TimesheetSummary
  cases(onlyActives: Boolean): [Case!]!
  timelinessReview(date_of_interest: Date, filters: [FilterInput]): TimelinessReview!
}

type Client {
  id: Int!
  slug: String!
  name: String!
  isStrategic: Boolean!
  accountManager: AccountManager
  isRecognized: Boolean!
  omniUrl: String!
  logoUrl: String!
  timesheets: Timesheets
  timesheet(slug: String!, filters: [FilterInput]): TimesheetSummary
  
  forecast(dateOfInterest: Date, filters: [FilterInput]): Forecast!
}

type Sponsor {
  slug: String!
  name: String!
  photoUrl: String
  clientId: Int
  crmId: String
  jobTitle: String
  linkedinUrl: String
  omniUrl: String
  client: Client
  timesheet(slug: String!, filters: [FilterInput]): TimesheetSummary
}

type Case {
  id: String!
  slug: String!
  title: String!
  isActive: Boolean!
  preContractedValue: Boolean!
  clientId: String
  everhourProjectsIds: [String!]
  status: String
  lastUpdated: String
  sponsor: String
  offersIds: [Int!]
  errors: [String!]!
  hasDescription: Boolean!
  hasClient: Boolean!
  hasEverhourProjectsIds: Boolean!
  numberOfDaysWithNoUpdates: Int!
  hasUpdatedDescription: Boolean!
  omniUrl: String!
  updates: [CaseUpdate]
  lastUpdate: CaseUpdate
  client: Client
  startOfContract: Date
  endOfContract: Date
  weeklyApprovedHours: Float
  tracker: [TrackerProject]
  timesheets: Timesheets
  isStale: Boolean!
  ontologyUrl: String
  
  timesheet(slug: String!, filters: [FilterInput]): TimesheetSummary
}

type TrackerProjectBudget {
  hours: Float
  period: String
}

type TrackerProject {
  id: String!
  name: String!
  kind: String!
  budget: TrackerProjectBudget
}

type CaseUpdate {
  date: String!
  author: String
  status: String
  observations: String
}

type Offer {
  id: Int!
  slug: String!
  name: String!
  coverImageUrl: String
  omniUrl: String!
}

type Project {
  id: String!
  name: String!
  tasks: [Task!]!
  folder: String
  isFavorite: Boolean!
  errors: [String!]!
  numberOfTasks: Int!
  hasTasksWithNoDueDate: Boolean!
  expectedDueDate: String
  hasTasksWithNoAssignee: Boolean!
  hasLateTasks: Boolean!
}

type Task {
  id: Int!
  assigneeId: Int
  projectId: Int!
  content: String!
  description: String!
  isCompleted: Boolean!
  due: String
  isLate: Boolean!
}

type User {
  id: Int!
  name: String!
  email: String!
  slug: String!
  kind: String!
  position: String!
  photoUrl: String!
}

type ActiveDeal {
  id: Int!
  title: String!
  stageId: Int!
  stageName: String!
  stageOrderNr: Int!
  clientOrProspectName: String!
  client: Client
  accountManager: AccountManager
  addTime: String
  updateTime: String
  daysSinceLastUpdate: Int
} 