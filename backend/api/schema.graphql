enum WorkerKind {
  ALL
  ACCOUNT_MANAGER
  CONSULTANT
}

type Worker {
  id: Int!
  slug: String!
  name: String!
  kind: WorkerKind!
  position: String!
  ontologyUserId: Int
  insightsUserId: Int
  todoistUserId: Int
  pipedriveUserId: Int
  isRecognized: Boolean!
  omniUrl: String!
  photoUrl: String!
  isOntologyAuthor: Boolean
}

type Client {
  id: Int!
  slug: String!
  name: String!
  isStrategic: Boolean!
  accountManager: Worker
  isRecognized: Boolean!
  omniUrl: String!
  logoUrl: String!
}

type Sponsor {
  slug: String!
  name: String!
  photoUrl: String
  clientId: Int
  crmId: String
  jobTitle: String
  linkedinUrl: String
  omniUrl: String!
}

type Case {
  id: String!
  slug: String!
  title: String!
  isActive: Boolean!
  clientId: String
  everhourProjectsIds: [String!]
  status: String
  lastUpdated: String
  sponsor: String
  offersIds: [Int!]
  errors: [String!]!
  hasDescription: Boolean!
  hasClient: Boolean!
  hasEverhourProjectsIds: Boolean!
  numberOfDaysWithNoUpdates: Int!
  hasUpdatedDescription: Boolean!
  omniUrl: String!

  client: Client
}


type Offer {
  id: Int!
  slug: String!
  name: String!
  coverImageUrl: String
  omniUrl: String!
}


type Query {

  accountManagers: [Worker!]!
  consultantsAndEngineers: [Worker!]!
  clients: [Client!]!
  sponsors: [Sponsor!]!
  cases(onlyActives: Boolean): [Case!]!
  offers: [Offer!]!

  accountManager(id: Int, slug: String): Worker @atLeastOne
  consultantOrEngineer(id: Int, slug: String): Worker @atLeastOne
  client(id: Int, slug: String): Client @atLeastOne
  sponsor(slug: String!): Sponsor
  case(id: String, slug: String): Case @atLeastOne
  offer(id: Int, slug: String): Offer @atLeastOne
}

directive @atLeastOne on FIELD_DEFINITION

